@page "/additionalinformation"
@inject AuthenticationStateProvider AuthenticationStateProvider
@using Travel.Areas.Identity.Data
@using Travel.Interfaces;
@inject IPersonDataService PersonData
@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
        <main class="page contact-page">
            <section class="portfolio-block contact">
                <div class="container">
                    <div class="heading">
                        <h2>ADditional Info</h2>
                    </div>
                    <form>
                        <div class="form-group"><label for="FirstName">First name</label><input @bind-value="FistName" class="form-control item" id="email"></div>
                        <div class="form-group"><label for="LastName">Last name</label><input @bind-value="LastName" class="form-control item" id="email"></div>
                        @*<div class="form-group">
            <label for="Gender">Gender</label>
            <div class="form-check"><input class="form-check-input" type="checkbox" @bind-value="Male" id="formCheck-2"><label class="form-check-label" for="formCheck-2">Male</label></div>
            <div class="form-check"><input class="form-check-input" type="checkbox" @bind-value="Female" id="formCheck-1"><label class="form-check-label" for="formCheck-1">Female</label></div>
        </div>*@
                        <div class="form-group"><label for="PhoneNumber">Phone number</label><input @bind-value="PhoneNumber" class="form-control item" type="text" id="name"></div>
                        <div class="form-group"><label for="name">Country</label><input @bind-value="Country" class="form-control item" type="text" id="name"></div>
                        <div class="form-group"><label for="name">City</label><input @bind-value="City" class="form-control item" type="text" id="name"></div>
                        <div class="form-group">
                            <button class="btn btn-primary btn-block btn-lg" type="button" @onclick="Submit">Confirm</button>
                            <button class="btn btn-outline-primary btn-block" @onclick="Skip">Skip</button>
                        </div>
                    </form>
                </div>
            </section>
        </main>
    </Authorized>
    <NotAuthorized>
        <AuthorizationRequired />
    </NotAuthorized>
</AuthorizeView>
@code {

    private string FistName { get; set; }
    private string LastName { get; set; }

    private bool Male { get; set; }
    private bool Female { get; set; }

    private string Gender { get; set; }

    private string PhoneNumber { get; set; }

    private string Country { get; set; }
    private string City { get; set; }

    private AuthenticationState authState { get; set; }

    private Person person { get; set; }

    protected override async Task OnInitializedAsync()
    {
        authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;


        if (user.Identity.IsAuthenticated)
        {

            person = await PersonData.GetPerson(userName: user.Identity.Name);

            FistName = person.FirstName;
            LastName = person.LastName;

            if (person.Gender == "Male")
            {
                Male = true;
                Female = false;
            }
            else if (person.Gender == "Female")
            {
                Male = false;
                Female = true;
            }
            else
            {
                Male = false;
                Female = false;
            }

            PhoneNumber = person.PhoneNumber;

            Country = person.Country;

            City = person.City;
        }


    }

    public void Submit()
    {

        person.FirstName = FistName;
        person.LastName = LastName;

        if (Male == true && Female == false)
        {
            person.Gender = "Male";
        }
        else if (Female == true && Male == false)
        {
            person.Gender = "Female";
        }
        else
        {
            person.Gender = "";
        }

        person.PhoneNumber = PhoneNumber;

        person.Country = Country;

        person.City = City;

        PersonData.UpdatePerson(person);

        NavigationManager.NavigateTo("profile", true);


    }

    public void Skip()
    {
        NavigationManager.NavigateTo("profile",true);
    }



}
